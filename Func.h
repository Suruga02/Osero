#ifndef _FUNC_H
#define _FUNC_H


class Osero
{
public:
	Osero();
	~Osero(){};

	//=====================================================================================================================================
	// 描画に関する関数 Draw.cpp
	//=====================================================================================================================================
	//操作方法を記述する関数
	void DrawHowOperation();
	//背景の描写(緑)
	void DrawGreenBack();
	//どのマスに標準があっているか示す関数　手番やisPlaceがわかるように
	void DrawCursor();
	//マス目の枠線を描写
	void DrawBoard();
	//マス目上の点を描写
	void DrawPoint();
	//一つの駒を描写
	void DrawPiece(int Px, int Py, int BW);
	//全ての駒を描写
	void DrawAllPiece();
	//戦況を一目でわかるバーの導入
	void DrawSituation();
	//対戦者の色をわかりやすくする関数
	void DrawName();
	//背景、枠、駒など盤面全体を描画する関数
	void DRAW();

	//=====================================================================================================================================
	// 入力操作に関する関数 Oper.cpp
	//=====================================================================================================================================

	//sapceで駒を置く関数
	void SetPiece();
	//変数を更新する関数
	void Updata();

	//=====================================================================================================================================
	// ルールに関する関数　Rule.cpp
	//=====================================================================================================================================
	//ゲーム終了を判断する関数
	bool isGameEnd();
	//ゲーム終了する関数
	void GameEnd();
	//ターンを飛ばす関数　passカウント+1
	void  PassTurn();
	void SetBW(int NewBW);
	int GetBW();


	//=====================================================================================================================================
	// 各種変数 
	//=====================================================================================================================================

protected:
	//盤上の座標
	int PosX, PosY;//0<=x,y<=7;
	//入力反映までのカウント変数
	int SelectCount;
	//白黒どちらの手番か表す変数 先手白1後手黒-1
	int BW;
	//名前の管理
	//const char* player1, *player2;
};



//=========================================================================================================================================
//その他の関数
//=========================================================================================================================================

	//キー入力を取得する関数
int InK();
//上下キーの入力を認識する関数 上-1下1
int WS();
//左右キーの入力を認識する関数 左-1右1
int AD();
struct Winner
{
	int Color;
	char Name[10];
};

#endif // !_FUNC_H